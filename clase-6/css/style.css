*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.index-principal{
    width: 100%;
    height: 600px;
    display: grid;
    grid-template-columns: repeat(8,1fr);
    grid-template-rows: repeat(6,1fr);
}

.index-principal img{
    width: 100%;
    height: 100%;
}

.index-principal h1{
    grid-column-start: 4;
    grid-column-end: 6;
    grid-row-start: 2;
    grid-row-end: 3;
    order: 3;
    background-color: rgba(128, 128, 128, 0.468);
    padding: 30px 2.5rem;
}
.index-principal p{
    grid-column: 4/6;
    grid-row: 3/4;
    order: 4;
}
.index-principal .img-1{
    grid-column: 2 /5;
    grid-row: 1/6;
    justify-items: center;
    align-items: center;
    order: 1;
}
.img-3{
    grid-column: 3/5;
    grid-row: 4/6;
    object-fit: contain;
    order: 2;
}

.container-grid{
    display: grid;
    width: 100%;
    height: 600px;
    background-color: black;
    /*css nos ofrece una medida que solamente funciona con esta propiedad de grid
    fraction fr
    */
    /* grid-template-columns:400px repeat(3,200px) 200px; el maximo de columnas es 12
    grid-template-rows: repeat(2,200px); infinito */

    /*en una misma linea de codigo puedo declarar row / column*/
    grid-template:  repeat(2,200px) /  400px repeat(4,200px); 
    grid-template-areas: 
    
    "item1 item5 pepito item3 item4"
    "item1 item5 item6 item7 item7"
    ;
    row-gap: .9375rem;
    column-gap: 1.5625rem;

    /*
    para mover todo el contenedor tenemos 2 propiedades
    justify-content
    align-content
    */
    justify-content: center;/*horizontal*/
    align-content: center;/*vertical*/
    /*
    propiedades para mover los items.
    justify-items
    align-items
    (se va a comportar el elemento como si fuese en linea
    solamente ocupando el espacio de su contenido)

    */
    justify-items: center;
    align-items: start;
}

.item1{
    background-color: lightblue;
    grid-area: item1;
}
.item2{
    background-color: rgb(251, 179, 134);
    grid-area: pepito;
}
.item3{
    background-color: rgb(163, 251, 123);
    grid-area: item3;
}
.item4{
    background-color: rgb(118, 255, 248);
    grid-area: item4;

}
.item5{
    background-color: rgb(212, 89, 236);
    grid-area: item5;
}
.item6{
    background-color: rgb(212, 69, 69);
    grid-area: item6;
}

.item7{
    background-color: rgb(193, 186, 43);
    grid-area: item7;
}

